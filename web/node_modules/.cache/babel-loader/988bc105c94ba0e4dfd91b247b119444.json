{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? React.createElement(\"div\", {\n    className: classes.action\n  }, React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","map":{"version":3,"sources":["/home/will/git/hddcheap/web/node_modules/@material-ui/lab/esm/Alert/Alert.js"],"names":["_objectWithoutProperties","_extends","React","PropTypes","clsx","withStyles","lighten","darken","Paper","SuccessOutlinedIcon","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","CloseIcon","IconButton","capitalize","styles","theme","getColor","palette","type","getBackgroundColor","root","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","color","success","main","standardInfo","info","standardWarning","warning","standardError","error","outlinedSuccess","border","concat","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","icon","marginRight","fontSize","opacity","message","flexDirection","justifyContent","action","alignItems","marginLeft","paddingLeft","defaultIconMapping","createElement","_ref","Alert","forwardRef","props","ref","children","classes","className","_props$closeText","closeText","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","other","square","elevation","size","title","onClick","process","env","NODE_ENV","propTypes","node","object","string","oneOf","func","name"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? React.createElement(\"div\", {\n    className: classes.action\n  }, React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);"]},"metadata":{},"sourceType":"module"}